<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core">
<ui:composition>
	<h:inputText id="currentEmbeddedLink" value="#{featuredClipsBean.currentEmbeddedLink}" styleClass="currentEmbeddedLink" style="display:none;"/>
	<h:inputText id="currentPlaybackPos" value="#{featuredClipsBean.currentPlaybackPos}" styleClass="currentPlaybackPos" style="display:none;"/>
	<h:commandButton styleClass="syncCurrentPlayback" style="display:none">
		<f:ajax event="click" execute="currentEmbeddedLink currentPlaybackPos" listener="#{featuredClipsBean.syncCurrentPlayback}"/>
	</h:commandButton>
	
	<div id="ytwrapper"></div>
	
	<div style="width: 100%; position: absolute; bottom: 0px;overflow: scroll;">
		<table>
			<tr>
				<td>
					<h:commandButton value="Remove all">
						<f:ajax event="click" render="@form" listener="#{featuredClipsBean.removeAll}"/>
					</h:commandButton>
				</td>
				<td>
					<c:forEach items="#{clips}" var="aClip">
						<div class="detail detail#{aClip.id}" style="display: none; width:100%;">
							<table>
								<tr>
									<td>
										<h3>#{aClip.title}</h3>
									</td>
									<td>
										<p>
											#{msg.client_clips_singer}:
											<ui:repeat var="aSinger" value="#{aClip.singers}">
												<h:commandLink onclick="slideToDetail();">
													<f:param name="singerId" value="#{aSinger.id}"/>
													<f:ajax event="click" execute="@form" render=":detail" listener="#{detailBean.showSingerDetail}"/>
													<h:outputText value="#{aSinger.name}"/>
												</h:commandLink>
											</ui:repeat>
										</p>
									</td>
									<td>
										<p>
											#{msg.client_clips_composer}:
											<ui:repeat var="aComposer" value="#{aClip.composers}">
												<h:commandLink value="#{aComposer.name}" onclick="slideToDetail();">
													<f:param name="composerId" value="#{aComposer.id}"/>
													<f:ajax event="click" execute="@form" render=":detail" listener="#{detailBean.showComposerDetail}"/>
												</h:commandLink>
											</ui:repeat>
										</p>
									</td>
									<td>
										<p>
											#{msg.client_clips_genre}:
											<ui:repeat var="aGenre" value="#{aClip.genres}">
												<h:commandLink value="#{aGenre.nameEn}"	rendered="#{utilsBean.currentLanguage eq 'en'}" onclick="slideToDetail();">
													<f:param name="genreId" value="#{aGenre.id}"/>
													<f:ajax event="click" execute="@form" render=":detail" listener="#{detailBean.showGenreDetail}"/>
												</h:commandLink>
												<h:commandLink value="#{aGenre.nameVi}" rendered="#{utilsBean.currentLanguage eq 'vi'}" onclick="slideToDetail();">
													<f:param name="genreId" value="#{aGenre.id}"/>
													<f:ajax event="click" execute="@form" render=":detail" listener="#{detailBean.showGenreDetail}"/>
												</h:commandLink>
											</ui:repeat>
										</p>
									</td>
									<td>
										<p>
											#{msg.client_clips_uploader}:
											<h:commandLink onclick="slideToDetail();">
												<f:param name="userId" value="#{aClip.user.id}"/>
												<f:ajax event="click" execute="@form" render=":detail" listener="#{detailBean.showUserDetail}"/>
												<h:outputText value="#{aClip.user.name}"/>
											</h:commandLink>
										</p>
									</td>
									<td>
										<p>
											<h:outputText value="#{aClip.nFans} #{msg.client_clips_peopleLiked}"/>
										</p>
									</td>
									<td>
										<p>
											<h:outputText value="#{aClip.nViews} #{msg.client_clips_peopleViewed}"/>
										</p>
									</td>
								</tr>
							</table>
						</div>
					</c:forEach>
				</td>
			</tr>
		</table>
		<table style="height: 200px;">
			<tr>
			<c:forEach items="#{clips}" var="aClip">
				<td style="overflow: hidden;">
					<div style="vertical-align: top;" align="center">
						<h:commandButton value="x" onclick="updateCurrentPlaybackPos();">
							<f:param name="selectedClipId" value="#{aClip.id}"/>
							<f:ajax event="click" execute="@form" render="@form" listener="#{featuredClipsBean.removeOne}"/>
						</h:commandButton>
						<br/>
						<h:graphicImage
							url="#{aClip.thumbnailLink}"
							onclick="loadClip('#{aClip.embeddedLink}', 0);"
							styleClass="reflect clipThumbnail thumbnail#{aClip.id}"
							width="120"
							alt="#{aClip.title}"/>
					</div>
				</td>
			</c:forEach>
			</tr>
		</table>
	</div>
	
	
	
	<script>
		var ytplayer;
		var currentInterval;
		var currentLink;
		var clipList = [];
		var clipStartTime;
		<c:forEach items="#{clips}" var="aClip">
			clipList.push({id:"#{aClip.id}", title:"#{aClip.title}", link:"#{aClip.embeddedLink}"});
		</c:forEach>

		var tempPlaybackPos = 0;
		var needSeekTo = false;
		
		function loadClip(link, playbackPos) {
			if(link == '' || !isLinkExistingInList(link)) {
				link = clipList[0].link;
			}
			currentLink = link;
			$("#featuredClips").find(".currentEmbeddedLink").val(link);
			$("#featuredClips").find(".syncCurrentPlayback").click();
			if(playbackPos > 0) {
				needSeekTo = true;
				tempPlaybackPos = playbackPos;
			}

			//switch playing css
			$("#featuredClips").find(".playing").removeClass("playing");
			$("#featuredClips").find(".thumbnail" + clipList[getIndexFromLink(link)].id).addClass("playing");

			//display detail
			$("#featuredClips").find(".detail").css("display", "none");
			$("#featuredClips").find(".detail" + clipList[getIndexFromLink(link)].id).css("display", "");
			
			//add the div for embedded youtube
			$("#ytwrapper").html([
				"&lt;div id='ytapiplayer'&gt;",
					"LOADING.......",
				"&lt;/div&gt;"
			].join(""));
			
			//embed youtube
			var params = { allowScriptAccess: "always", allowFullScreen:"true"};
		    var atts = { id: "myytplayer" };
		    swfobject.embedSWF(link + "?enablejsapi=1&amp;fs=1&amp;playerapiid=ytplayer&amp;autoplay=1&amp;version=3",
		                       "ytapiplayer", "640", "480", "8", null, null, params, atts);
		}

		function updateCurrentPlaybackPos() {
			$("#featuredClips").find(".currentPlaybackPos").val(ytplayer.getCurrentTime());
			$("#featuredClips").find(".syncCurrentPlayback").click();
		}
		
		function isLinkExistingInList(link) {
			return getIndexFromLink(link) >= 0;
		}

		function getIndexFromLink(link) {
			for(var i = 0; i &lt; clipList.length;i++) {
				if(clipList[i].link == link) {
					return i;
				} 
			}
			return -1;
		}
		
		function onYouTubePlayerReady(playerId) {
			  ytplayer = document.getElementById("myytplayer");
			  ytplayer.addEventListener("onStateChange", "onytplayerStateChange");
			  currentInterval = setInterval(checkVideoEnds, PLAYER_INTERVAL);
			  clipStartTime = (new Date()).getTime();
		}

		function onytplayerStateChange(newState) {
			if(newState == 1 &amp;&amp; needSeekTo) {
				ytplayer.seekTo(tempPlaybackPos, true);
				needSeekTo = false;
			}
		}
		
		function checkVideoEnds() {
			if(ytplayer.getCurrentTime() &gt;= ytplayer.getDuration() ||
					((new Date()).getTime() - clipStartTime &gt; 3000 &amp;&amp; ytplayer.getVideoBytesLoaded() &lt; 0)) {
				//stop the video
				ytplayer.stopVideo();
				
				//stop the interval
				clearInterval(currentInterval);
				
				//clear the current embedded youtube
				$("#ytwrapper").html("");
				
				//load the next clip
				loadClip(getNextClipLink(), 0);
			}
		}

		function getNextClipLink() {
			for(var i = 0; i &lt; clipList.length; i++) {
				if(currentLink == clipList[i].link) {
					return clipList[(i+1) % clipList.length].link;
				}
			}
		}
		
		//load the first clip
		loadClip('#{featuredClipsBean.currentEmbeddedLink}', #{featuredClipsBean.currentPlaybackPos});
		
		//add reflection effect to thumbnails
		for(var i = 0; i &lt; clipList.length; i++) {
			$("#thumbnail_" + clipList[i].id + "_").reflect(
				{
					height: 0.5,
					opacity: 0.5
				}
			);
		}
	</script>
</ui:composition>
</html>